---
- name: Confirm OS image installation
  pause:
    prompt: "Really wipe all host data and install a fresh OS image on all target hosts (yes/no) ?"
  register: confirm_installation
  run_once: true
  delegate_to: localhost
  when: not hetzner_installimage_skip_confirmation

- name: Set default value for hetzner_installimage_run
  set_fact:
    hetzner_installimage_run: "{{ confirm_installation.user_input | default(hetzner_installimage_skip_confirmation) | bool }}"

- name: Check existence of /etc/hetzner_installimage_provisioned.flag if possible
  block:
    - name: Override ansible_user if alternate_user is defined
      set_fact:
        ansible_user: "{{ alternate_user }}"
      when: alternate_user is defined
    - name: Check existence of /etc/hetzner_installimage_provisioned.flag
      stat:
        path: /etc/hetzner_installimage_provisioned.flag
      register: hetzner_installimage_provisioned_flag
      when: not hetzner_installimage_ignore_provisioned_flag
      ignore_errors: yes
  ignore_unreachable: true # if an error is returned here the host might not have the ssh key yet
  when: hetzner_installimage_run

- name: Hosts that can not be connected due to mising ssh key should not be marked as unavailable
  meta: clear_host_errors

- name: Overwrite hetzner_installimage_run when conditons match
  set_fact:
    hetzner_installimage_run: false
  when: |
    (hetzner_installimage_ignore_provisioned_flag is not defined or not hetzner_installimage_ignore_provisioned_flag)
    and (hetzner_installimage_provisioned_flag.stat is defined and hetzner_installimage_provisioned_flag.stat.exists)

- name: Resolve key fingerprints
  import_tasks: resolve_key_fingerprints.yml
  delegate_to: localhost
  run_once: yes
  when: hetzner_installimage_run

- name: Include rescue mode handling tasks
  import_tasks: rescuemode.yml
  when: hetzner_installimage_run and not ansible_check_mode

- name: Include installimage handling tasks
  import_tasks: installimage.yml
  when: hetzner_installimage_run and not ansible_check_mode
