---
- name: Check provisioning status with alternate user
  block:
    - name: Check existence of /etc/hetzner_installimage_provisioned.flag using alternate user
      stat:
        path: /etc/hetzner_installimage_provisioned.flag
      register: hetzner_installimage_provisioned_flag_alternate_user
      ignore_errors: true
      vars:
        ansible_user: "{{ alternate_user }}"
  ignore_unreachable: true
  when: alternate_user is defined
  run_once: true
  delegate_to: localhost

- name: Check provisioning status with default user
  block:
    - name: Check existence of /etc/hetzner_installimage_provisioned.flag using default user
      stat:
        path: /etc/hetzner_installimage_provisioned.flag
      register: hetzner_installimage_provisioned_flag_default_user
      ignore_errors: true
  ignore_unreachable: true
  when: not alternate_user is defined or hetzner_installimage_provisioned_flag_alternate_user is failed
  run_once: true
  delegate_to: localhost

- name: Set fact for provisioning status
  set_fact:
    server_provisioned: >-
      {{
        (hetzner_installimage_provisioned_flag_alternate_user is defined
        and hetzner_installimage_provisioned_flag_alternate_user.stat.exists)
        or
        (hetzner_installimage_provisioned_flag_default_user is defined
        and hetzner_installimage_provisioned_flag_default_user.stat.exists)
      }}
  run_once: true

- name: Confirm OS image installation with provisioning status
  pause:
    prompt: >-
      {% if server_provisioned %}
      This server was previously provisioned. Really wipe all host data and install a fresh OS image on all target hosts (yes/no) ?
      {% else %}
      This server was not previously provisioned. Proceed to install a fresh OS image on all target hosts (yes/no) ?
      {% endif %}
  register: confirm_installation
  run_once: true
  delegate_to: localhost

- name: Set default value for hetzner_installimage_run based on confirmation
  set_fact:
    hetzner_installimage_run: "{{ confirm_installation.user_input | default('no') | bool }}"
  run_once: true

- name: Hosts that can not be connected due to mising ssh key should not be marked as unavailable
  meta: clear_host_errors

- name: Overwrite hetzner_installimage_run when conditons match
  set_fact:
    hetzner_installimage_run: false
  when: |
    (hetzner_installimage_ignore_provisioned_flag is not defined or not hetzner_installimage_ignore_provisioned_flag)
    and (hetzner_installimage_provisioned_flag.stat is defined and hetzner_installimage_provisioned_flag.stat.exists)

- name: Resolve key fingerprints
  import_tasks: resolve_key_fingerprints.yml
  delegate_to: localhost
  run_once: yes
  when: hetzner_installimage_run

- name: Include rescue mode handling tasks
  import_tasks: rescuemode.yml
  when: hetzner_installimage_run and not ansible_check_mode

- name: Include installimage handling tasks
  import_tasks: installimage.yml
  when: hetzner_installimage_run and not ansible_check_mode
